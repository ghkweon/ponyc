version: 2.1

orbs:
  zulip: ponylang/zulip@1

jobs:
  # Jobs for building and testing with ponyc system installed cross-llvm
  cross-arm:
    docker:
      - image: ponylang/ponyc-ci-cross-arm:20200127
        user: pony
    steps:
      - checkout

      # restore or build libs
      - restore_cache:
          keys:
            - libs-cache-cross-arm-{{ checksum "lib/CMakeLists.txt" }}
      - run: if [ ! -d build/libs ]; then make libs llvm_archs="X86;ARM"; fi
      - save_cache:
          key: libs-cache-cross-arm-{{ checksum "lib/CMakeLists.txt" }}
          paths:
            - build/libs

      # build and test for x86_64 first
      - run: make configure config=release verbose=1
      - run: make build config=release verbose=1 build_flags=-j3
      - run: make test-ci config=release verbose=1

      # build libponyrt for ARM
      - run: make cross-libponyrt config=release verbose=1 CC=arm-linux-gnueabi-gcc CXX=arm-linux-gnueabi-g++ arch=armv7-a tune=cortex-a9 cross_triple=arm-unknown-linux-gnueabi
      # run stdlib tests on ARM
      - run: make test-cross-ci config=release verbose=1 PONYPATH=../armv7-a/release cross_arch=armv7-a cross_cpu=cortex-a9 cross_triple=arm-unknown-linux-gnueabi cross_linker=arm-linux-gnueabi-gcc cross_runner="qemu-arm-static -cpu cortex-a9 -L /usr/local/arm-linux-gnueabi/libc"

      # - run: make config=release verbose=1 CC=arm-linux-gnueabi-gcc CXX=arm-linux-gnueabi-g++ arch=armv7-a tune=cortex-a9 bits=32 CFLAGS="-idirafter /usr/cross/include/" CXXFLAGS="-idirafter /usr/cross/include/" LDFLAGS="-idirafter /usr/cross/include/" PONYPATH=/usr/cross/lib -j3 libponyrt
      # # build ponyc for target cross compilation
      # - run: make config=release verbose=1 PONYPATH=/usr/cross/lib cross_triple=arm-unknown-linux-gnueabi cross_arch=armv7-a cross_cpu=cortex-a9 cross_linker=arm-linux-gnueabi-gcc QEMU_RUNNER="qemu-arm-static --cpu cortex-a9 -L /usr/local/arm-linux-gnueabi/libc" -j3 all
      # # run tests for cross built stdlib using ponyc cross building support
      # - run: make config=release verbose=1 PONYPATH=/usr/cross/lib cross_triple=arm-unknown-linux-gnueabi cross_arch=armv7-a cross_cpu=cortex-a9 cross_linker=arm-linux-gnueabi-gcc QEMU_RUNNER="qemu-arm-static --cpu cortex-a9 -L /usr/local/arm-linux-gnueabi/libc" test-cross-ci
      - zulip/status:
          fail_only: true

  # cross-llvm-701-armhf:
  #   docker:
  #     - image: ponylang/ponyc-ci:cross-llvm-7.0.1-armhf
  #       user: pony
  #   steps:
  #     - checkout
  #     # build and test for x86_64 first
  #     - run: make config=release verbose=1 -j3 all
  #     - run: make config=release verbose=1 test-ci
  #     # build libponyrt for target arch
  #     - run: make config=release verbose=1 CC=arm-linux-gnueabihf-gcc CXX=arm-linux-gnueabihf-g++ arch=armv7-a tune=cortex-a9 bits=32 CFLAGS="-idirafter /usr/cross/include/" CXXFLAGS="-idirafter /usr/cross/include/" LDFLAGS="-idirafter /usr/cross/include/" PONYPATH=/usr/cross/lib -j3 libponyrt
  #     # build ponyc for target cross compilation
  #     - run: make config=release verbose=1 PONYPATH=/usr/cross/lib cross_triple=arm-unknown-linux-gnueabihf cross_arch=armv7-a cross_cpu=cortex-a9 cross_linker=arm-linux-gnueabihf-gcc QEMU_RUNNER="qemu-arm-static --cpu cortex-a9 -L /usr/local/arm-linux-gnueabihf/libc" -j3 all
  #     # run tests for cross built stdlib using ponyc cross building support
  #     - run: make config=release verbose=1 PONYPATH=/usr/cross/lib cross_triple=arm-unknown-linux-gnueabihf cross_arch=armv7-a cross_cpu=cortex-a9 cross_linker=arm-linux-gnueabihf-gcc QEMU_RUNNER="qemu-arm-static --cpu cortex-a9 -L /usr/local/arm-linux-gnueabihf/libc" test-cross-ci
  #     - zulip/status:
  #         fail_only: true

  # cross-llvm-701-aarch64:
  #   docker:
  #     - image: ponylang/ponyc-ci:cross-llvm-7.0.1-aarch64
  #       user: pony
  #   steps:
  #     - checkout
  #     # build and test for x86_64 first
  #     - run: make config=release verbose=1 -j3 all
  #     - run: make config=release verbose=1 test-ci
  #     # build libponyrt for target arch
  #     - run: make config=release verbose=1 CC=aarch64-linux-gnu-gcc CXX=aarch64-linux-gnu-g++ arch=armv8-a tune=cortex-a53 bits=64 CFLAGS="-idirafter /usr/cross/include/" CXXFLAGS="-idirafter /usr/cross/include/" LDFLAGS="-idirafter /usr/cross/include/" PONYPATH=/usr/cross/lib -j3 libponyrt
  #     # build ponyc for target cross compilation
  #     - run: make config=release verbose=1 PONYPATH=/usr/cross/lib cross_triple=aarch64-unknown-linux-gnu cross_arch=armv8-a cross_cpu=cortex-a53 cross_linker=aarch64-linux-gnu-gcc QEMU_RUNNER="qemu-aarch64-static --cpu cortex-a53 -L /usr/local/aarch64-linux-gnu/libc" -j3 all
  #     # run tests for cross built stdlib using ponyc cross building support
  #     - run: make config=release verbose=1 PONYPATH=/usr/cross/lib cross_triple=aarch64-unknown-linux-gnu cross_arch=armv8-a cross_cpu=cortex-a53 cross_linker=aarch64-linux-gnu-gcc QEMU_RUNNER="qemu-aarch64-static --cpu cortex-a53 -L /usr/local/aarch64-linux-gnu/libc" test-cross-ci
  #     - zulip/status:
  #         fail_only: true

workflows:
  version: 2.1

  # PR acceptance tests, shouldn't run on `master` or `release` branches
  pr-acceptance-tests:
    jobs:
      # p2 cross compilation tests
      - cross-arm:
          context: org-global
          filters:
            branches:
              ignore:
                - master
                - release

      # - cross-llvm-701-armhf:
      #     context: org-global
      #     filters:
      #       branches:
      #         ignore:
      #           - master
      #           - release

#     Currently don't pass
#      - cross-llvm-701-release-aarch64:
#           requires:
#             - lib-llvm-ubuntu-release
#           context: org-global
#          filters:
#            branches:
#              ignore:
#                - master
#                - release
#
#      - cross-llvm-701-debug-aarch64:
#           requires:
#             - lib-llvm-ubuntu-debugS
#           context: org-global
#          filters:
#            branches:
#              ignore:
#                - master
#                - release

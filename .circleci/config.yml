version: 2.1

orbs:
  zulip: ponylang/zulip@1

jobs:
  # Jobs for building and testing with ponyc system installed cross-llvm
  cross-arm:
    docker:
      - image: ponylang/ponyc-ci-cross-arm:20200127
        user: pony
    steps:
      - checkout
      # restore or build libs
      - restore_cache:
          keys:
            - libs-cache-cross-arm-{{ checksum "lib/CMakeLists.txt" }}
      - run: if [ ! -d build/libs ]; then make libs llvm_archs="X86;ARM"; fi
      - save_cache:
          key: libs-cache-cross-arm-{{ checksum "lib/CMakeLists.txt" }}
          paths:
            - build/libs
      # build and test for x86_64 first
      - run: make configure config=release
      - run: make build config=release build_flags=-j3
      - run: make test-ci config=release
      # build libponyrt for ARM
      - run: make cross-libponyrt config=release CC=arm-linux-gnueabi-gcc CXX=arm-linux-gnueabi-g++ arch=armv7-a tune=cortex-a9 llc_arch=arm
      # run stdlib tests on ARM
      - run: make test-cross-ci config=release PONYPATH=../armv7-a/release cross_triple=arm-unknown-linux-gnueabi cross_arch=armv7-a cross_cpu=cortex-a9 cross_linker=arm-linux-gnueabi-gcc cross_runner="qemu-arm-static -cpu cortex-a9 -L /usr/local/arm-linux-gnueabi/libc"
      - zulip/status:
          fail_only: true

  cross-armhf:
    docker:
      - image: ponylang/ponyc-ci-cross-armhf:20200212
        user: pony
    steps:
      - checkout
      # restore or build libs
      - restore_cache:
          keys:
            - libs-cache-cross-armhf-{{ checksum "lib/CMakeLists.txt" }}
      - run: if [ ! -d build/libs ]; then make libs llvm_archs="X86;ARM"; fi
      - save_cache:
          key: libs-cache-cross-armhf-{{ checksum "lib/CMakeLists.txt" }}
          paths:
            - build/libs
      # build and test for x86_64 first
      - run: make configure config=release
      - run: make build config=release build_flags=-j3
      - run: make test-ci config=release
      # build libponyrt for ARM
      - run: make cross-libponyrt config=release CC=arm-linux-gnueabihf-gcc CXX=arm-linux-gnueabihf-g++ arch=armv7-a tune=cortex-a9 llc_arch=arm
      # run stdlib tests on ARM
      - run: make test-cross-ci config=release PONYPATH=../armv7-a/release cross_triple=arm-unknown-linux-gnueabihf cross_arch=armv7-a cross_cpu=cortex-a9 cross_linker=arm-linux-gnueabihf-gcc cross_runner="qemu-arm-static -cpu cortex-a9 -L /usr/local/arm-linux-gnueabihf/libc"
      - zulip/status:
          fail_only: true

  cross-aarch64:
    docker:
      - image: ponylang/ponyc-ci-cross-aarch64:20200212
        user: pony
    steps:
      - checkout
      # restore or build libs
      - restore_cache:
          keys:
            - libs-cache-cross-aarch64-{{ checksum "lib/CMakeLists.txt" }}
      - run: if [ ! -d build/libs ]; then make libs llvm_archs="X86;ARM"; fi
      - save_cache:
          key: libs-cache-cross-aarch64-{{ checksum "lib/CMakeLists.txt" }}
          paths:
            - build/libs
      # build and test for x86_64 first
      - run: make configure config=release
      - run: make build config=release build_flags=-j3
      - run: make test-ci config=release
      # build libponyrt for ARM
      - run: make cross-libponyrt config=release CC=aarch64-linux-gnu-gcc CXX=aarch64-linux-gnu-g++ arch=armv8-a tune=cortex-a53 llc_arch=arm
      # run stdlib tests on ARM
      - run: make test-cross-ci config=release PONYPATH=../armv8-a/release cross_triple=aarch64-unknown-linux-gnu cross_arch=armv8-a cross_cpu=cortex-a53 cross_linker=aarch64-linux-gnu-gcc cross_runner="qemu-aarch64-static -cpu cortex-a53 -L /usr/local/aarch64-linux-gnu/libc"
      - zulip/status:
          fail_only: true


workflows:
  version: 2.1

  # PR acceptance tests, shouldn't run on `master` or `release` branches
  pr-acceptance-tests:
    jobs:
      # p2 cross compilation tests
      - cross-arm:
          context: org-global
          filters:
            branches:
              ignore:
                - master
                - release
      - cross-armhf:
          context: org-global
          filters:
            branches:
              ignore:
                - master
                - release
      # Disabled because not supported at present
      # - cross-aarch64:
      #     context: org-global
      #     filters:
      #       branches:
      #         ignore:
      #           - master
      #           - release
